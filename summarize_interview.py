#!/usr/bin/env python3
# summarize_interview.py
import subprocess
import sys
import os
from pathlib import Path

def transcribe(input_path: str) -> str:
    """–†–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ —Ä–µ—á–∏ —á–µ—Ä–µ–∑ faster-whisper (–ø–æ–¥–¥–µ—Ä–∂–∫–∞ .mp4 –Ω–∞–ø—Ä—è–º—É—é)"""
    from faster_whisper import WhisperModel
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –º–æ–¥–µ–ª—å (–∏—Å–ø–æ–ª—å–∑—É–µ–º "base" –∫–∞–∫ –∏ —Ä–∞–Ω—å—à–µ)
    model = WhisperModel("base")
    
    # –í—ã–ø–æ–ª–Ω—è–µ–º —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏—é
    segments, info = model.transcribe(input_path)
    
    # –°–æ–±–∏—Ä–∞–µ–º —Ç–µ–∫—Å—Ç –∏–∑ –≤—Å–µ—Ö —Å–µ–≥–º–µ–Ω—Ç–æ–≤
    result = ""
    for segment in segments:
        result += segment.text + " "
    
    return result.strip()


def summarize_with_ollama(text: str) -> str:
    prompt = f"""
–¢—ã ‚Äî –ø–æ–º–æ—â–Ω–∏–∫, –¥–µ–ª–∞—é—â–∏–π –∫—Ä–∞—Ç–∫–æ–µ –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–∞–º–º–∞—Ä–∏ —Ç–µ—Ö—Å–æ–±–µ—Å–æ–≤.
–°–¥–µ–ª–∞–π –∫–æ—Ä–æ—Ç–∫–∏–π –æ–±–∑–æ—Ä –ø–æ —Å–ª–µ–¥—É—é—â–µ–º—É —Ç–µ–∫—Å—Ç—É:
{text}
"""
    try:
        result = subprocess.run(
            ["ollama", "run", "llama3.2"],
            input=prompt,
            text=True,
            capture_output=True,
            timeout=180
        )
        if result.returncode != 0:
            raise RuntimeError(result.stderr)
        return result.stdout.strip()
    except Exception as e:
        raise RuntimeError(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–∑–æ–≤–µ Ollama: {e}")


def main():
    if len(sys.argv) < 2:
        print("‚ùó –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: python summarize_interview.py <video_or_audio_file> [--use-existing-transcript]")
        sys.exit(1)

    input_path = sys.argv[1]
    use_existing = "--use-existing-transcript" in sys.argv
    
    if not Path(input_path).exists():
        print("‚ùó –£–∫–∞–∑–∞–Ω–Ω—ã–π —Ñ–∞–π–ª –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        sys.exit(1)

    transcript_path = Path("transcript.txt")
    
    if use_existing and transcript_path.exists():
        print("üìù –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏—é...")
        text = transcript_path.read_text()
    else:
        print("üß† –†–∞—Å–ø–æ–∑–Ω–∞–µ–º —Ä–µ—á—å...")
        text = transcribe(input_path)
        transcript_path.write_text(text)

    print("üìö –°–æ–∑–¥–∞–µ–º —Å–∞–º–º–∞—Ä–∏...")
    summary = summarize_with_ollama(text)

    summary_path = Path("summary.txt")
    summary_path.write_text(summary)

    print("\n‚úÖ –ì–æ—Ç–æ–≤–æ!")
    print(f"\nüìù –†–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤: {transcript_path.resolve()}")
    print(f"üìÑ –°–∞–º–º–∞—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤: {summary_path.resolve()}")


if __name__ == "__main__":
    main()
